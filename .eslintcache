[{"/Users/nambk/Documents/Projects/PrimeTS/src/index.tsx":"1","/Users/nambk/Documents/Projects/PrimeTS/src/reportWebVitals.ts":"2","/Users/nambk/Documents/Projects/PrimeTS/src/components/app.tsx":"3","/Users/nambk/Documents/Projects/PrimeTS/src/components/PrimeForm.tsx":"4","/Users/nambk/Documents/Projects/PrimeTS/src/components/PrimesForm.tsx":"5","/Users/nambk/Documents/Projects/PrimeTS/src/components/header.tsx":"6","/Users/nambk/Documents/Projects/PrimeTS/src/components/footer.tsx":"7","/Users/nambk/Documents/Projects/PrimeTS/src/service/theme/index.ts":"8","/Users/nambk/Documents/Projects/PrimeTS/src/service/theme/global.ts":"9"},{"size":511,"mtime":1609696157266,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1609684756369,"results":"12","hashOfConfig":"11"},{"size":455,"mtime":1609697414354,"results":"13","hashOfConfig":"11"},{"size":4630,"mtime":1609697893114,"results":"14","hashOfConfig":"11"},{"size":3236,"mtime":1609700115255,"results":"15","hashOfConfig":"11"},{"size":3679,"mtime":1609791783906,"results":"16","hashOfConfig":"11"},{"size":1668,"mtime":1609696159333,"results":"17","hashOfConfig":"11"},{"size":5603,"mtime":1609789951675,"results":"18","hashOfConfig":"11"},{"size":1812,"mtime":1609788771899,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9f9q0h",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/nambk/Documents/Projects/PrimeTS/src/index.tsx",[],["40","41"],"/Users/nambk/Documents/Projects/PrimeTS/src/reportWebVitals.ts",[],"/Users/nambk/Documents/Projects/PrimeTS/src/components/app.tsx",[],"/Users/nambk/Documents/Projects/PrimeTS/src/components/PrimeForm.tsx",["42","43","44","45","46","47","48","49"],"import React from 'react';\n\n// Render the input form to enter a number\n// https://reactjs.org/docs/forms.html#controlled-components\ninterface IProps {\n  // value: number;\n}\ninterface IState {\n  inputNum: string;\n  answer: string;\n}\n\nclass PrimeForm extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {inputNum: '100',answer: ''};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      inputNum: e.target.value\n    });\n  }\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const num: number = +this.state.inputNum\n    \n    // // Naive way to check a prime\n    // function isPrime(number) {\n    //   if(num < 2) return false;\n\n    //   for (let k = 2; k < num; k++){\n    //     if( num % k == 0){\n    //       return false;\n    //     }\n    //   }\n    //   return true;\n    // }\n\n    function isPrime(number: number) {\n      if (number < 2) return false;\n      if (number % 2 == 0) return (number == 2);\n      const sqrt = Math.sqrt(number);\n      for (let i = 3; i <= sqrt; i += 2) {\n          if (number % i == 0) return false;\n      }\n      return true;\n    }\n\n    function findPrimeLoop(oddNumber: number) {\n      while (!isPrime(oddNumber)) {\n        oddNumber -= 2;\n      }\n      return oddNumber\n    }\n\n    // Find prime < input number\n    function calcPrime(number: number):string {\n      var num = parseInt(number.toString());\n\n      if (num < 0) {\n        alert('Please input a positive integer!');\n        return ''\n      }\n\n      if ((num == 0) || (num == 1) || (num == 2)) {\n        return 'None'\n      }\n\n      if (num == 3) {\n        return '2'\n      }\n\n      if (num > Number.MAX_SAFE_INTEGER) {\n        return 'Input a number less than 2^53 - 1'\n      }\n      \n      if (num % 2 == 0) {\n        num -= 1;\n        if (isPrime(num)) {\n          return num.toString()\n        } else {\n          return findPrimeLoop(num).toString()\n        }\n      } else {\n        if (isPrime(num)) num -= 2;\n        return findPrimeLoop(num).toString()\n      }\n\n\n      // Benchmark\n      // Freezing browser\n      // Failsafe -1 0 1 2 2.2 10e4(99991)\n\n      // Sieve: https://www.geeksforgeeks.org/nearest-prime-less-given-number-n/\n      // https://stackoverflow.com/questions/3885817/how-do-i-check-that-a-number-is-float-or-integer/20779354#20779354\n\n      // Number.MAX_SAFE_INTEGER: (2^53 - 1) = 9,007,199,254,740,992 / 9007199254740992\n\n      // Number.isInteger(123) //true\n      // Number.isInteger(-123) //true\n      // Number.isInteger(5-2) //true\n      // Number.isInteger(0) //true\n      // Number.isInteger(0.5) //false\n      // Number.isInteger('123') //false\n      // Number.isInteger(false) //false\n      // Number.isInteger(Infinity) //false\n      // Number.isInteger(-Infinity) //false\n      // Number.isInteger(0 / 0) //false\n    }\n\n    // // Find prime <= input number\n    // function calcPrime(number) {\n    //   var num = parseInt(number)\n\n    //   if (num < 0) {\n    //     alert('Please input a positive integer!');\n    //     return ''\n    //   }\n\n    //   if ((num == 0) || (num == 1) || (num == 2)) {\n    //     return 'None'\n    //   }\n\n    //   if (num > Number.MAX_SAFE_INTEGER) {\n    //     return 'Input a number less than 2^53 - 1'\n    //   }\n      \n    //   if (num % 2 == 0) {\n    //     num -= 1;\n    //     if (isPrime(num)) {\n    //       return num\n    //     } else {\n    //       return findPrimeLoop(num)\n    //     }\n    //   } else {\n    //     return findPrimeLoop(num)\n    //   }\n    // }\n\n    this.setState({\n      answer: calcPrime(num),\n    });  \n  }\n\n  render() {\n    return (\n      <form id=\"frmFindHighestPrime\" onSubmit={this.handleSubmit} className=\"container-fluid nambk-container-input text-center\">\n        <h2 className=\"nambk-header\">Highest Prime</h2>\n        <div className=\"nambk-header-desc\">Lower than Input Number</div>\n        <div>\n          <input id=\"inputNumber\" name=\"inputNumber\" className=\"nambk-input\" style={{width: '50%'}} \n                 type=\"number\" value={this.state.inputNum} aria-label=\"Input Number\" autoFocus\n                 onChange={this.handleChange} placeholder=\"Enter a number\"/>\n          <input id=\"btnFindHighestPrime\" className=\"nambk-btn nambk-btn-primary\" \n                 type=\"submit\" value=\"Go\"/>\n        </div>\n        <div id=\"result\" className=\"mt-3\" aria-readonly style={{minHeight: '2rem',}}>\n          {this.state.answer}  \n        </div>   \n      </form>\n    );\n  }\n}\nexport default PrimeForm;","/Users/nambk/Documents/Projects/PrimeTS/src/components/PrimesForm.tsx",[],"/Users/nambk/Documents/Projects/PrimeTS/src/components/header.tsx",[],"/Users/nambk/Documents/Projects/PrimeTS/src/components/footer.tsx",[],"/Users/nambk/Documents/Projects/PrimeTS/src/service/theme/index.ts",[],"/Users/nambk/Documents/Projects/PrimeTS/src/service/theme/global.ts",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":45,"column":22,"nodeType":"56","messageId":"57","endLine":45,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":45,"column":43,"nodeType":"56","messageId":"57","endLine":45,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":48,"column":26,"nodeType":"56","messageId":"57","endLine":48,"endColumn":28},{"ruleId":"54","severity":1,"message":"55","line":69,"column":16,"nodeType":"56","messageId":"57","endLine":69,"endColumn":18},{"ruleId":"54","severity":1,"message":"55","line":69,"column":30,"nodeType":"56","messageId":"57","endLine":69,"endColumn":32},{"ruleId":"54","severity":1,"message":"55","line":69,"column":44,"nodeType":"56","messageId":"57","endLine":69,"endColumn":46},{"ruleId":"54","severity":1,"message":"55","line":73,"column":15,"nodeType":"56","messageId":"57","endLine":73,"endColumn":17},{"ruleId":"54","severity":1,"message":"55","line":81,"column":19,"nodeType":"56","messageId":"57","endLine":81,"endColumn":21},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]